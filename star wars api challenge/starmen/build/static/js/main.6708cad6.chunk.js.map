{"version":3,"sources":["components/Navbar.js","components/Home.js","components/People.js","components/Planets.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","Menu","inverted","Container","to","Item","name","Home","People","data","Grid","columns","map","people","i","Column","Card","Content","Header","Description","height","mass","hair_color","eye_color","Planets","planets","climate","diameter","population","orbital_period","App","useState","setPeople","setPlanets","loading","setLoading","useEffect","axios","get","then","response","results","res","console","log","catch","error","className","Dimmer","active","Loader","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6708cad6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Menu, Container } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <Menu inverted>\r\n            <Container>\r\n                <Link to='/'>\r\n                  <Menu.Item name='star wars API' />\r\n                </Link>\r\n                <Link to='/people'>\r\n                    <Menu.Item name='people' />\r\n                </Link>\r\n                <Link to='/planets'>\r\n                <Menu.Item name='planets' />\r\n                </Link>\r\n            </Container>\r\n        </Menu>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n         <p>hello</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { Card, Grid } from \"semantic-ui-react\";\r\n\r\nexport default function People({ data }) {\r\n  return (\r\n    <>\r\n      <h1>People</h1>\r\n      <Grid columns={2}>\r\n        {data.map((people, i) => {\r\n          return (\r\n            <Grid.Column key={i}>\r\n              <Card>\r\n                <Card.Content>\r\n                  <Card.Header>{people.name}</Card.Header>\r\n                  <Card.Description>\r\n                    <strong>Height</strong>\r\n                    <p>{people.height}</p>\r\n                    <strong>Mass</strong>\r\n                    <p>{people.mass}</p>\r\n                    <strong>Hair Color</strong>\r\n                    <p>{people.hair_color}</p>\r\n                    <strong>Eye Color</strong>\r\n                    <p>{people.eye_color}</p>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n              </Card>\r\n            </Grid.Column>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Card, Grid } from \"semantic-ui-react\";\r\n\r\nexport default function Planets({ data }) {\r\n  return (\r\n    <>\r\n      <h1>Planets</h1>\r\n      <Grid columns={2}>\r\n        {data.map((planets, i) => {\r\n          return (\r\n            <Grid.Column key={i}>\r\n              <Card>\r\n                <Card.Content>\r\n                  <Card.Header>{planets.name}</Card.Header>\r\n                  <Card.Description>\r\n                    <strong>Climate</strong>\r\n                    <p>{planets.climate}</p>\r\n                    <strong>Diameter</strong>\r\n                    <p>{planets.diameter}</p>\r\n                    <strong>Population</strong>\r\n                    <p>{planets.population}</p>\r\n                    <strong>Orbital Period</strong>\r\n                    <p>{planets.orbital_period + \" days\"}</p>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n              </Card>\r\n            </Grid.Column>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"./components/Navbar.js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container, Dimmer, Loader } from \"semantic-ui-react\";\nimport Home from \"./components/Home\";\nimport People from \"./components/People\";\nimport Planets from \"./components/Planets\";\nimport \"./App.css\";\n\nfunction App() {\n  //  State variables all go here with initial state == empty array\n  const [people, setPeople] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  //  Keep track of and show loading status while fetching from API with initial state == true\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    //  Callback function for first arg\n    axios\n      .get(\"https://swapi.dev/api/people\")\n      .then((response) => {\n        setPeople(response.data.results);\n        axios.get(\"https://swapi.dev/api/planets\").then((res) => {\n          setPlanets(res.data.results);\n          setLoading(false);\n        });\n        console.log(\"TEST\", setPlanets);\n        console.log(\"Test\", setPeople);\n      })\n      .catch((error) => {\n        console.log(\"No people available\", error);\n      });\n\n    // async function fetchPlanets() {\n    //   let res = await fetch(\"https://swapi.dev/api/planets\");\n    //   let data = await res.json();\n    //   setPlanets(data.results);\n    //   setLoading(false);\n    // }\n\n    // fetchPlanets();\n\n    //  Second arg is empty dependency array since only called once when component mounts to DOM\n  }, []);\n  // console.log(\"people\", people);\n  // console.log(\"planets\", planets);\n\n  return (\n    <div className='body'>\n      <Router>\n        <Navbar />\n        <Container>\n          {loading ? (\n            <Dimmer active inverted>\n              <Loader inverted>Loading</Loader>\n            </Dimmer>\n          ) : (\n            <Switch>\n              <Route exact path='/'>\n                <Home />\n              </Route>\n              <Route exact path='/people'>\n                <People data={people} />\n              </Route>\n              <Route exact path='/planets'>\n                <Planets data={planets} />\n              </Route>\n            </Switch>\n          )}\n        </Container>\n      </Router>\n      <></>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}